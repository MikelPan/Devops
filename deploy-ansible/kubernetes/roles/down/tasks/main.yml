---

- include_vars: file={{ base_dir }}/roles/down/tasks/down_binary.yml

- name: detect outbound network
  shell: >
    warn=no
    curl -s --connect-timeout 10 www.baidu.com 2>/dev/null >/dev/null; echo $?
  changed_when: false
  register: outbound_network_st

- name: set outbound network fact
  set_fact: has_outbound_network={{ outbound_network_st.stdout.strip() == '0' }}

- name: download kubernetes binary
  get_url:
    url: "{{ item.url }}"
    dest: "{{ base_dir }}/bin/{{ item.name }}-{{ item.version }}.tar.gz"
    force: yes
    validate_certs: no
  register: get_url_result
  ignore_errors: True
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  with_items: "{{ kubernetes }}"
  when: has_outbound_network


- name: download ca tools cfssl
  get_url:
    url: "{{ item.url }}"
    dest: "{{ base_dir }}/bin/{{ item.name }}"
    force: yes
    validate_certs: no
  register: get_url_result
  ignore_errors: True
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  with_items: "{{ CA }}"
  when: has_outbound_network

- name: download mysql
  get_url:
    url: "{{ item.url }}"
    dest: "{{ base_dir }}/bin/{{ item.name }}-{{ item.version }}.tar.gz"
    force: yes
    validate_certs: no
  register: get_url_result
  ignore_errors: True
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  with_items: "{{ mysql }}"
  when: has_outbound_network

- include_tasks: unarch.yml

